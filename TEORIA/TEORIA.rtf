{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Los apuntadores son variables que almacenan direcciones de memoria, tambi\'e9n son llamadas variables de tipo apuntador. Difieren de las dem\'e1s variables en que no almacenan directamente los datos, sino la direcci\'f3n de memoria en que se encuentra el dato. La utilidad del empleo de apuntadores se ver\'e1 despu\'e9s de mostrar algunos ejemplos de su uso. La aritm\'e9tica de apuntadores se refiere a las operaciones de suma y resta de constantes que se pueden realizar sobre las variables de tipo apuntador. Al sumar 1 a un apuntador, se obtiene la direcci\'f3n de la siguiente localidad de memoria. Es importante hacer notar que a un apuntador no se le puede sumar o restar otro apuntador, solamente se le puede sumar o restar una constante entera. Ver algunos ejemplos del uso de apuntadores en C++ en el archivo de Visual Basic\
\
CONCLUSIONES: Como se puede ver, las ventajas del uso de apuntadores son esencialmente dos: 
\f1 \uc0\u61607 
\f0  La aritm\'e9tica de apuntadores que facilita la l\'f3gica de algunos algoritmos 
\f1 \uc0\u61607 
\f0  La asignaci\'f3n din\'e1mica de la memoria (NOTA: La asignaci\'f3n est\'e1tica de memoria se realiza durante la compilaci\'f3n del programa. La asignaci\'f3n din\'e1mica en cambio, se realiza en tiempo de ejecuci\'f3n.)\
\
\
PILA \
NECESIDAD: Con frecuencia en las tiendas que expenden productos de grandes dimensiones, por ejemplo las televisiones del Palacio de Hierro, al recibir en sus bodegas la mercanc\'eda de los fabricantes, se va colocando las piezas una sobre otra (apilando), quedando hasta abajo la que entr\'f3 primero y hasta arriba la que entro al final. Al realizar la tienda una venta al p\'fablico, manda una orden al almac\'e9n para que se entregue el producto vendido y en ese momento debe ordenarse entregar la pieza que esta hasta arriba del mont\'f3n, o sea, la que entr\'f3 al \'faltimo. Este es el esquema de operaci\'f3n conocido como UEPS (\'daltimas Entradas Primeras Salidas) o LIFO por sus siglas en ingl\'e9s. El sistema que emite las \'f3rdenes de salida al almac\'e9n y al mismo tiempo el documento de garant\'eda del equipo, debe estar preparado para manejar esta situaci\'f3n, es decir, ordenar sacar primero la pieza que entr\'f3 al \'faltimo. En la soluci\'f3n de este requerimiento es de gran ayuda el procesamiento de la informaci\'f3n empleando la estructura de datos no fundamental llamada PILA. A continuaci\'f3n se presenta la especificaci\'f3n l\'f3gica del TDA PILA.\
\
Es un dato estructurado lineal, no fundamental, homog\'e9neo y finito. Se caracteriza por tres par\'e1metros o propiedades: m\'ednimo, m\'e1ximo y tope. Con el se pueden realizar dos operaciones: insertar y extraer. Ambas operaciones solamente se pueden realizar por el extremo que corresponde al tope, como muestra la figura.\
\
Insertar (push) (inserta un elemento a la pila):\
 a). Verificar que existe capacidad disponible en la pila. Si Tope es igual a M\'e1ximo, la pila est\'e1 llena. \
b). Incrementar el valor de \'93Tope\'94. \
c). Insertar el nuevo valor en la posici\'f3n se\'f1alada por \'93Tope\'94. \
\
Extraer (pop) (extrae un elemento de la pila): \
a). Verificar que hay valores en la pila. Si Tope es menor que M\'ednimo, la pila est\'e1 vac\'eda. \
b). Extraer el valor de la posici\'f3n se\'f1alada por \'93Tope\'94. \
c). Decrementar el valor de \'93Tope\'94.\
\
Consultar (peek) (consulta la informaci\'f3n de tope, sin extraerlo): \
a). Verificar que hay valores en la pila. Si Tope es menor que M\'ednimo, la pila est\'e1 vac\'eda. \
b). Mostrar el valor de la posici\'f3n se\'f1alada por \'93Tope\'94\
\
PILAS LIGADAS \
Una forma frecuente de implementar las pilas en la computadora es por medio de arreglos, mismos que cuentan con la caracter\'edstica de consecutividad, sin embargo, no siempre se cuenta con esta posibilidad. Cuando no se cuenta con localidades consecutivas de memoria para la implementaci\'f3n de las pilas, se puede recurrir a las \'93pilas ligadas\'94. En este esquema, cada elemento de la pila, consta de dos partes, la parte de datos o informaci\'f3n y la parte de enlace al elemento anterior, como muestra la figura. Las Pilas Ligadas, emplean \'93tope\'94 como \'fanico par\'e1metro. Esta variable contiene la \'fanica direcci\'f3n de acceso a la pila, tanto para insertar, como para extraer.\
\
Insertar (push) (inserta un elemento a la pila): \
a). Crear un \'93nodo\'94. \
b). Registrar los datos en el campo de informaci\'f3n del nodo. \
c). El campo de enlace del nodo hacerlo igual a \'93tope\'94. d). \'93tope\'94 apuntarlo al nuevo \'93nodo\'94. \
\
Extraer (pop) (extrae un elemento de la pila): \
a). Verificar que hay valores en la pila. Si \'93tope\'94 apunta a NULL, la pila est\'e1 vac\'eda. \
b). Extraer informaci\'f3n del \'93tope\'94, igualando \'93extraido\'94 a \'93tope\'94. \
c). Descender el tope, igualando \'93tope\'94 al campo de enlace de \'93extraido\'94. \
d). Entregar los datos del campo de informaci\'f3n de \'93extraido\'94. \
e). Liberar \'93extraido\'94. \
\
Consultar (peek) (consulta la informaci\'f3n de tope, sin extraerlo): \
a). Verificar que hay valores en la pila. Si \'93tope\'94 apunta a NULL, la pila est\'e1 vac\'eda. \
b). Consultar informaci\'f3n del \'93tope\'94, igualando \'93extraido\'94 a \'93tope\'94. \
c). Entregar los datos del campo de informaci\'f3n de \'93extraido\'94.}